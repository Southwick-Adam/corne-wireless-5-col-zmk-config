/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// LAYERS
#define DEFAULT 0
#define SYM     1
#define NUM     2
#define VIM     3
#define FUNC    4

/ {
        chosen {
                zmk,physical-layout = &foostan_corne_5col_layout;
        };


        behaviors {
                kp_to: kp_to {
                        compatible = "zmk,behavior-hold-tap";
                        #binding-cells = <2>;
                        bindings = <&kp>, <&to>;
                        tapping-term-ms = <200>;
                };

                mo_to: mo_to {
                        compatible = "zmk,behavior-hold-tap";
                        #binding-cells = <2>;
                        bindings = <&mo>, <&to>;
                        tapping-term-ms = <200>;
                };
        };


        macros {
                fname: fname {
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings
                        = <&macro_press &kp LSHFT>
                        , <&macro_tap &kp A>
                        , <&macro_release &kp LSHFT>
                        , <&macro_tap &kp D &kp A &kp M>
                        ;
                };

                lname: lname {
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings
                        = <&macro_press &kp LSHFT>
                        , <&macro_tap &kp S>
                        , <&macro_release &kp LSHFT>
                        , <&macro_tap &kp O &kp U &kp T &kp H &kp W &kp I &kp C &kp K>
                        ;
                };

                email: email {
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings
                        = <&macro_tap &kp A &kp D &kp A &kp M>
                        , <&macro_tap &kp S &kp O &kp U &kp T &kp H &kp W &kp I &kp C &kp K>
                        , <&macro_tap &kp AT &kp G &kp M &kp A &kp I &kp L>
                        , <&macro_tap &kp DOT &kp C &kp O &kp M>
                        ;
                };

                CIW: CIW {
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings
                        = <&macro_tap &kp C &kp I &kp W >
                        ;
                };

                vim_i: vim_i {
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings
                        = <&macro_tap &kp I &to DEFAULT >
                        ;
                };

                vim_a: vim_a {
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings
                        = <&macro_tap &kp A &to DEFAULT >
                        ;
                };

                go_vim: go_vim {
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings
                        = <&macro_tap &kp ESC &to VIM >
                        ;
                };     
        };


        combos {
                compatible = "zmk,combos";
                combo_caps {
                timeout-ms = <50>;
                layers = <0>;
                key-positions = <30 35>;
                bindings = <&kp CAPS>;
                };

                combo_func {
                timeout-ms = <50>;
                layers = <0 1 2 3 5>;
                key-positions = <32 33>;
                bindings = <&mo FUNC>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
//   |  Q  |  W  |  F  |  P  |  G  |    |  J  |  L  |  U  |  Y  | BSP |
//   |  A  |  R  |  S  |  T  |  D  |    |  H  |  N  |  E  |  I  |  O  |
//   |  Z  |  X  |  C  |  V  |  B  |    |  K  |  M  |  .  |  ,  |  ;  |
//
// | LSHIFT:TAB | CMD:SPC | L1:L0 |    | L2 | CTRL:ENT | L3 |
// -----------------------------------------------------------------------------------------
                        display-name = "Base";
                        bindings = <
&kp Q &kp W &kp F &kp P &kp G     &kp J &kp L &kp U &kp Y &kp BSPC
&kp A &kp R &kp S &kp T &kp D     &kp H &kp N &kp E &kp I &kp O
&kp Z &kp X &kp C &kp V &kp B     &kp K &kp M &kp DOT &kp COMMA &kp SEMI

&mt LSHIFT TAB &mt LCMD SPACE &mo_to NUM NUM   &mo_to SYM DEFAULT  &mt LCTRL RET &go_vim
                        >;
                };

                sym_layer {
// -----------------------------------------------------------------------------------------
//   |  ~  |  @  |  <  |  >  |  '  |    |  *  |  +  |  [  |  ]  | BSP |
//   |  &  |  $  |  ?  |  _  |  "  |    |  !  |  =  |  (  |  )  |  `  |
//   | XXX |  ^  |  %  |  #  |  |  |    |  /  |  -  |  {  |  }  |  \  |
// -----------------------------------------------------------------------------------------
                        bindings = <
&kp GRAVE &kp AT &kp LT &kp GT &kp SQT            &kp ASTRK &kp PLUS &kp LBKT &kp RBKT &kp BSPC
&mo AMPS  &kp DLLR  &kp QMARK &kp UNDER &kp DQT   &kp EXCL &kp EQUAL &kp LPAR &kp RPAR &kp GRAVE
&none &kp CARET &kp PRCNT &kp HASH &kp PIPE       &kp FSLH &kp MINUS  &kp LBRC &kp RBRC &kp BSLH

&trans &trans &trans    &trans &trans &trans
                        >;
                };

                num_layer {
// -----------------------------------------------------------------------------------------
//   | * |  1  |  2  |  3  |  =  |    |  ^  |   <  |  UP  |   >   | BSP |
//   | + |  4  |  5  |  6  |  0  |    |  /  | LEFT | DOWN | RIGHT |     |
//   | - |  7  |  8  |  9  |  .  |    |  ,  |   (  |   )  |   [   |  ]  |
// -----------------------------------------------------------------------------------------
                        bindings = <
&kp KP_ASTERISK &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp KP_EQUAL  &kp CARET &kp LT &kp UP &kp GT &kp BSPC
&mo KP_PLUS   &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp KP_N0       &kp KP_DIVIDE &kp LEFT &kp DOWN &kp RIGHT &none
&kp KP_MINUS &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp KP_DOT       &kp KP_COMMA &kp KP_LPAR  &kp KP_RPAR &kp LBKT &kp RBKT

&trans &trans &trans    &trans &trans &trans
                        >;
                };

                vim_layer {
// -----------------------------------------------------------------------------------------
//   |  R  |  D  |  O  |  I  |  A   |    |   B  |   E  |  UP  |   W   | BSP |
//   |  M  | CIW |  R  |  G  | CTRL |    |   F  | LEFT | DOWN | RIGHT |  }  |
//   |  U  |  `  |  ~  |  Y  |  V   |    |   ^  |   %  |   Z  |   $   |  {  |
// -----------------------------------------------------------------------------------------
                        bindings = <
&kp R &kp D &kp O &vim_i &vim_a         &kp B &kp E &kp UP &kp W &kp BSPC
&kp M &CIW &kp R &kp G &kp LCTRL        &kp F &kp LEFT &kp DOWN &kp RIGHT &kp RBRC
&kp U &kp GRAVE &kp TILDE &kp Y &kp V   &kp CARET &kp PRCNT &kp Z &kp DLLR &kp LBRC
                        
&trans &trans &trans    &trans &trans &kp ESC
                        >;
                };

                func_layer {
// -----------------------------------------------------------------------------------------
//   | ESC | fname | lname | email | . |     | BRIGHT_DN | BRIGHT_UP | VOL_DN | VOL_UP | MUTE |
//
//                                                                               
// -----------------------------------------------------------------------------------------
                        bindings = <
&kp ESC &fname &lname &email &none    &kp C_BRI_DN &kp C_BRI_UP &kp C_VOL_DN &kp C_VOL_UP &kp C_MUTE
&none &none &none &none &none         &none &none &none &none &none
&none &none &none &none &none         &none &none &none &none &none

&trans &trans &trans    &trans &trans &trans
                        >;
                };
        };
};
